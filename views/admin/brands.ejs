
        


<%- include("../../views/partials/admin/header") %>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
<style>
  
       .pagination-container {
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 30px 0;
  flex-wrap: wrap;
  gap: 8px;
}

.pagination-container a,
.pagination-container span {
  display: inline-block;
  padding: 8px 14px;
  font-size: 14px;
  text-decoration: none;
  color: #007bff;
  border: 1px solid #ddd;
  border-radius: 6px;
  background-color: #fff;
  transition: all 0.2s ease-in-out;
}

.pagination-container a:hover {
  background-color: #007bff;
  color: #fff;
  border-color: #007bff;
}

.pagination-container .current-page {
  background-color: #007bff;
  color: #fff;
  border-color: #007bff;
  font-weight: bold;
  cursor: default;
}
   
</style>
<section class="content-main">
  <div class="content-header">
    <div>
      <h2 class="content-title card-title">Brands</h2>
    </div>
  </div>
  <div class="card">
    <div class="card-body">
      <div class="row">
        <div class="col-md-3">
       
     <form id="addBrandForm" enctype="multipart/form-data" method="POST" action="/admin/addBrand">

  <div class="mb-4">
    <label for="product_name" class="form-label">Brand Name</label>
    <input type="text" name="name" placeholder="Type here" class="form-control" />
  </div>
  <label for="product_name" class="form-label">Brand Image</label>
  <div class="input-upload">
    <img src="" alt=""/>
    <input class="form-control border" name="image" type="file" />
  </div>
  <div class="d-grid">
    <button class="btn btn-primary mt-20" type="submit">
      Add Brand
    </button>
  </div>
</form>

        </div>
        <div class="col-md-7 ml-105">
          <div class="table-responsive">
            <table class="table table-hover">
              <thead>
                <tr>
                  <th>Brand</th>
                  <th>Logo</th>
                  <th>Status</th>
                  <th>Block/Unblock/Delete</th>
                </tr>
              </thead>
              <% data.reverse().forEach((brand) => { %>
  <tr id="brand-row-<%= brand._id %>">
    <td><%= brand.name %></td>
    <td>
      <img src="<%= brand.brandImage.startsWith('http') ? brand.brandImage : '/uploads/re-image/' + brand.brandImage %>" alt="<%= brand.name %>" width="40" />


    </td>
    <td id="blockBtn-<%=brand._id%>">
      <% if (brand.isBlocked) { %>
        <span class="badge bg-danger">Blocked</span>
      <% } else { %>
        <span class="badge bg-success">Active</span>
      <% } %>
    </td>
    <td id="blockStatus-<%=brand._id%>">
      <% if (!brand.isBlocked) { %>
        

       <button onclick="toggleBlockStatus('<%= brand._id %>', true)" class="btn btn-danger">Block</button>

      <% } else { %>
       <button onclick="toggleBlockStatus('<%= brand._id %>', false)" class="btn btn-success">Unblock</button>

      <% } %>
       <button onclick="deleteBrand('<%= brand._id %>')" class="btn btn-danger" style="padding-left: 15px;">Delete</button>
       

    </td>
  </tr>
<% }) %>

</tbody>

            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
   <!-- Pagination -->
    <div class="pagination-container">
      <% if (currentPage > 1) { %>
      <a href="?page=<%= currentPage - 1 %>">&laquo; Previous</a>
      <% } %> <% for (let i = 1; i <= totalPages; i++) { %> <% if (i ===
      currentPage) { %>
      <span class="current-page"><%= i %></span>
      <% } else { %>
      <a href="?page=<%= i %>"><%= i %></a>
      <% } %> <% } %> <% if (currentPage < totalPages) { %>
      <a href="?page=<%= currentPage + 1 %>">Next &raquo;</a>
      <% } %>
    </div>
</section>
<%- include("../../views/partials/admin/footer") %>


<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


  <script>
document.getElementById('addBrandForm').addEventListener('submit', async function (e) {
  e.preventDefault();

  const formData = new FormData(this);
  try {
    const response = await fetch('/admin/addBrand', {
      method: 'POST',
      body: formData,
    });

    const result = await response.json();

    if (response.ok) {
      Swal.fire({
        icon: 'success',
        title: 'Brand added',
        text: result.message || 'Brand added successfully!',
      });

      const brand = result.brand;
      const tableBody = document.querySelector('table tbody');
      const newRow = document.createElement('tr');
      newRow.id = `brand-row-${brand._id}`;

      newRow.innerHTML = `
        <td>${brand.name}</td>
        <td>
          <img src="${brand.brandImage.startsWith('http') ? brand.brandImage : '/uploads/re-image/' + brand.brandImage}" alt="${brand.name}" width="40" />
        </td>
        <td id="blockBtn-${brand._id}">
          <span class="badge bg-success">Active</span>
        </td>
        <td id="blockStatus-${brand._id}">
          <button onclick="toggleBlockStatus('${brand._id}', true)" class="btn btn-danger">Block</button>
          <button onclick="deleteBrand('${brand._id}')" class="btn btn-danger" style="padding-left: 15px;">Delete</button>
        </td>
      `;

      tableBody.prepend(newRow);
      this.reset(); 

    } else {
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: result.error || 'Something went wrong',
      });
    }

  } catch (error) {
    Swal.fire({
      icon: 'error',
      title: 'Error',
      text: error.message || 'Something went wrong'
    });
  }
});
    
  async function toggleBlockStatus(brandId, block) {
    const confirmText = block
      ? "Are you sure you want to block this brand?"
      : "Are you sure you want to unblock this brand?";

    const result = await Swal.fire({
      title: confirmText,
      icon: "warning",
      showCancelButton: true,
      confirmButtonText: "Yes",
      cancelButtonText: "Cancel",
    });

    if (!result.isConfirmed) return;

    try {
      const response = await fetch(`/admin/${block ? "blockBrand" : "unblockBrand"}`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ id: brandId }),
      });

      const data = await response.json();

      if (!response.ok) throw new Error(data.error || "Failed");

    
      const statusCell = document.getElementById(`blockBtn-${brandId}`);
      const actionCell = document.getElementById(`blockStatus-${brandId}`);

     if (block) {
  statusCell.innerHTML = `<span class="badge bg-danger">Blocked</span>`;
  actionCell.innerHTML = `
    <button onclick="toggleBlockStatus('${brandId}', false)" class="btn btn-success">Unblock</button>
    <button onclick="deleteBrand('${brandId}')" class="btn btn-danger" style="padding-left: 15px;">Delete</button>`;
} else {
  statusCell.innerHTML = `<span class="badge bg-success">Active</span>`;
  actionCell.innerHTML = `
    <button onclick="toggleBlockStatus('${brandId}', true)" class="btn btn-danger">Block</button>
    <button onclick="deleteBrand('${brandId}')" class="btn btn-danger" style="padding-left: 15px;">Delete</button>`;
}


      Swal.fire({
        icon: "success",
        title: block ? "Brand Blocked" : "Brand Unblocked",
        text: data.message || "Operation successful!",
      });

    } catch (error) {
      Swal.fire({
        icon: "error",
        title: "Error",
        text: error.message || "Something went wrong!",
      });
    }
  }


    async function deleteBrand(brandId) {
    const result = await Swal.fire({
      title: "Are you sure you want to delete this brand?",
      icon: "warning",
      showCancelButton: true,
      confirmButtonText: "Yes, delete it",
      cancelButtonText: "Cancel"
    });

    if (!result.isConfirmed) return;

    try {
      const response = await fetch("/admin/deleteBrand", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ id: brandId })
      });

      const data = await response.json();

      if (!response.ok) throw new Error(data.error || "Delete failed");

    
      const row = document.getElementById(`brand-row-${brandId}`);
      if (row) row.remove();

      Swal.fire({
        icon: "success",
        title: "Deleted!",
        text: data.message || "Brand deleted successfully.",
      });

    } catch (error) {
      Swal.fire({
        icon: "error",
        title: "Error",
        text: error.message || "Something went wrong.",
      });
    }
  }
</script>



