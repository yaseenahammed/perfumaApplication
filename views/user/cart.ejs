


 <%- include("../../views/partials/user/header")%> 

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Shopping Cart</title>
 
  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap">
  

  <style>
 body {
  background-color: #F5F7FA;
  font-family: 'Roboto', sans-serif;
  margin: 0;
  padding-top: 100px; 
  color: #2E2E2E;
}


.cart-wrapper {
  max-width: 1200px;
  margin: 0 auto;
  display: flex;
  flex-direction: row; 
  align-items: flex-start;
  gap: 30px;
  padding: 0 15px;
}


.cart-items {
  flex: 2;
  background: #FFFFFF;
  border-radius: 12px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
  padding: 25px;
}

.cart-items h2 {
  font-size: 1.5rem;
  font-weight: 700;
  margin-bottom: 20px;
  color: #2E2E2E;
}

.cart-item {
  display: flex;
  align-items: center;
  padding: 20px 0;
  border-bottom: 1px solid #EDEFF2;
}

.cart-item img {
  width: 120px;
  height: 120px;
  object-fit: cover;
  border-radius: 8px;
  margin-right: 20px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.item-details {
  flex: 1;
}

.item-details h3 {
  margin: 0 0 10px;
  font-size: 1.2rem;
  font-weight: 500;
}

.item-details p {
  margin: 5px 0;
  font-size: 0.95rem;
  color: #666666;
}

.quantity {
  display: flex;
  align-items: center;
  gap: 10px;
  margin: 10px 0;
}

.btn-decrement, .btn-increment, .btn-remove {
  background: #4A90E2;
  color: #FFFFFF;
  border: none;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  cursor: pointer;
  font-weight: 500;
  transition: background 0.3s ease;
}

.btn-increment, .btn-remove {
  background: #E94E77;
}

.btn-decrement:hover, .btn-increment:hover {
  background: #357ABD;
}

.btn-remove:hover {
  background: #D43F6B;
}

.btn-decrement:disabled, .btn-increment:disabled, .btn-remove:disabled {
  background: #B0B0B0;
  cursor: not-allowed;
}


.order-summary {
  flex: 1;
  max-width: 320px;
  background: #FFFFFF;
  border-radius: 12px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
  padding: 25px;
  position: sticky;
  top: 120px;
}

.order-summary h2 {
  font-size: 1.3rem;
  font-weight: 700;
  margin-bottom: 20px;
  color: #2E2E2E;
}

.order-summary p {
  font-size: 1rem;
  margin: 10px 0;
  color: #666666;
}

.btn-checkout {
  background: #4A90E2;
  color: #FFFFFF;
  border: none;
  padding: 12px 25px;
  border-radius: 8px;
  width: 100%;
  font-size: 1rem;
  font-weight: 500;
  cursor: pointer;
  transition: background 0.3s ease;
}

.btn-checkout:hover {
  background: #357ABD;
}

.btn-checkout:disabled {
  background: #B0B0B0;
  cursor: not-allowed;
}

.payment-icons {
  color: #4A90E2;
  font-weight: 500;
}


@media (max-width: 768px) {
  .cart-wrapper {
    flex-direction: column;
  }
  .order-summary {
    max-width: 100%;
    position: static;
    margin-top: 20px;
  }
  .cart-item img {
    width: 100px;
    height: 100px;
  }
}


    </style>
</head>

<body>
   
<div class="cart-wrapper">


  <div class="cart-items">
    <h2>Shopping Cart</h2>
    <% if (cartItems.length === 0) { %>
      <p>Your cart is empty.</p>
    <% } else { %>
      <% cartItems.forEach(item => { %>
        <div class="cart-item">
          <img src="<%= item.product.productImages[0] %>" alt="<%= item.product.name %>">
          <div class="item-details">
            <h3><%= item.product.name %></h3>
            <p>Color: <%= item.product.color %></p>
            <p>Availability: <%= item.product.quantity > 0 && item.product.isListed && !item.product.isBlocked ? 'Available' : 'Not Available' %> <%= item.product.quantity > 0 ? '(' + item.product.quantity + ' left)' : '' %></p>
            <div class="quantity">
              <button class="btn-decrement" data-id="<%= item.product._id %>" <%= item.quantity <= 1 ? 'disabled' : '' %>>-</button>
              <span><%= item.quantity %></span>
              <button class="btn-increment" data-id="<%= item.product._id %>" <%= item.quantity >= item.product.stock ? 'disabled' : '' %>>+</button>
            </div>
            <p>Price: ₹<%= item.product.price %> per item</p>
            <button class="btn-remove" data-id="<%= item.product._id %>">Remove</button>
          </div>
        </div>
      <% }) %>
    <% } %>
  </div>


  <div class="order-summary">
    <h2>Order Summary</h2>
    <p>Subtotal (<%= cartItems.length %> items): ₹<%= subtotal %></p>
    <p>Shipping: <%= shipping %></p>
    <p>Insurance: ₹<%= insurance %></p>
    <p>Tax (12%): ₹<%= tax %></p>
    <p>Total: ₹<%= total %></p>
    <% let disableCheckout = total === 0 || cartItems.some(item => !item.product.isListed || item.product.isBlocked); %>
    <button class="btn-checkout" <%= disableCheckout ? 'disabled' : '' %>>Proceed to Checkout</button>
    <p>We accept: <span class="payment-icons">Visa, MasterCard, PayPal</span></p>
  </div>

</div>

  
    <%- include("../../views/partials/user/footer")%>
  <script src="/js/cart.js"></script>  
</body>
</html>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const incrementButtons = document.querySelectorAll('.btn-increment');
  const decrementButtons = document.querySelectorAll('.btn-decrement');
  const removeButtons = document.querySelectorAll('.btn-remove');
  const checkoutButton = document.querySelector('.btn-checkout');

 
  const updateCartUI = async () => {
    try {
      const response = await fetch('/cart', {
        method: 'GET',
        headers: { 'Content-Type': 'application/json' }
      });
      if (response.ok) {
        window.location.reload(); 
      }
    } catch (error) {
      console.error('Error updating cart:', error);
    }
  };

 
  incrementButtons.forEach(button => {
    button.addEventListener('click', async (e) => {
      const productId = e.target.getAttribute('data-id');
      try {
        const response = await fetch(`/cart/add/${productId}`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' }
        });
        const result = await response.json();
        if (result.success) {
          await updateCartUI();
        } else {
          alert(result.error || 'Failed to update quantity');
        }
      } catch (error) {
        console.error('Error incrementing quantity:', error);
        alert('An error occurred');
      }
    });
  });

 
  decrementButtons.forEach(button => {
    button.addEventListener('click', async (e) => {
      const productId = e.target.getAttribute('data-id');
      try {
        const response = await fetch(`/cart/decrement/${productId}`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' }
        });
        const result = await response.json();
        if (result.success) {
          await updateCartUI();
        } else {
          alert(result.error || 'Failed to update quantity');
        }
      } catch (error) {
        console.error('Error decrementing quantity:', error);
        alert('An error occurred');
      }
    });
  });

  removeButtons.forEach(button => {
    button.addEventListener('click', async (e) => {
      const productId = e.target.getAttribute('data-id');
      try {
        const response = await fetch(`/cart/remove/${productId}`, {
          method: 'DELETE',
          headers: { 'Content-Type': 'application/json' }
        });
        const result = await response.json();
        if (result.success) {
          await updateCartUI();
        } else {
          alert(result.error || 'Failed to remove item');
        }
      } catch (error) {
        console.error('Error removing item:', error);
        alert('An error occurred');
      }
    });
  });


  if (checkoutButton) {
    checkoutButton.addEventListener('click', (e) => {
      if (!checkoutButton.disabled) {
        window.location.href = '/checkout';
      }
    });
  }
});
</script>