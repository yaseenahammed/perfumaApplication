<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Wishlist - Perfuma</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        tailwind.config = {
            theme: {
                extend: {
                    animation: {
                        'fade-in': 'fadeIn 0.5s ease-in-out forwards',
                        'slide-up': 'slideUp 0.6s ease-out forwards',
                    },
                    keyframes: {
                        fadeIn: {
                            '0%': { opacity: '0' },
                            '100%': { opacity: '1' },
                        },
                        slideUp: {
                            '0%': { transform: 'translateY(30px)', opacity: '0' },
                            '100%': { transform: 'translateY(0)', opacity: '1' },
                        }
                    }
                }
            }
        }
    </script>

    <style>
        .wishlist-item {
            transition: all 0.3s ease;
        }
        .wishlist-item:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        }
    </style>
</head>

<body class="bg-gray-50">
    <%- include("../../views/partials/user/header") %>

    <section class="relative py-16 bg-gradient-to-r from-gray-900 via-gray-800 to-gray-900">
        <div class="relative z-10 container mx-auto px-4 text-center text-white">
            <h1 class="text-4xl lg:text-5xl font-bold mb-4">Wishlist</h1>
            <nav class="flex items-center justify-center space-x-2 text-lg">
                <a href="/" class="text-gray-300 hover:text-white transition duration-200">Home</a>
                <i class="fas fa-chevron-right text-gray-400 text-sm"></i>
                <span class="text-amber-400">Wishlist</span>
            </nav>
        </div>
    </section>

    <main class="py-16">
        <div class="container mx-auto px-4">
            <div class="max-w-7xl mx-auto">
                <div class="grid lg:grid-cols-1 gap-8">
                    <div class="lg:col-span-1">
                        <div class="bg-white rounded-2xl shadow-xl p-8 animate-fade-in">
                            <h2 class="text-2xl lg:text-3xl font-bold text-gray-900 mb-6 flex items-center">
                                <i class="fas fa-heart text-amber-500 mr-3"></i>
                                Your Wishlist
                            </h2>
                            <% if (wishlistItems && wishlistItems.length > 0) { %>
                                <div class="space-y-6">
                                    <% wishlistItems.forEach(item => { %>
                                        <div class="wishlist-item border-2 border-gray-200 rounded-xl p-6 relative flex items-center gap-4">
                                            <% if (item.product.productImages && item.product.productImages.length > 0) { %>
                                                <img src="<%= item.product.productImages[0] %>" alt="<%= item.product.name %>" class="w-20 h-20 object-cover rounded-lg shadow-sm">
                                            <% } else { %>
                                                <img src="/images/default-product.png" alt="No Image" class="w-20 h-20 object-cover rounded-lg shadow-sm">
                                            <% } %>
                                            <div class="flex-1">
                                                <h3 class="text-lg font-semibold text-gray-900"><%= item.product.name %></h3>
                                                <p class="text-gray-600 text-sm">Price: â‚¹<%= item.product.salePrice %></p>
                                            </div>
                                            <div class="flex space-x-4">
                                                <button class="remove-item-btn text-red-500 hover:text-red-700 font-medium text-sm flex items-center"
                                                        data-id="<%= item.product._id %>">
                                                    <i class="fas fa-trash mr-1"></i> Remove
                                                </button>
                                                <button class="add-to-cart-btn text-amber-500 hover:text-amber-700 font-medium text-sm flex items-center"
                                                        data-id="<%= item.product._id %>">
                                                    <i class="fas fa-cart-plus mr-1"></i> Add to Cart
                                                </button>
                                            </div>
                                        </div>
                                    <% }) %>
                                </div>
                                <button class="clear-wishlist-btn mt-6 w-full flex items-center justify-center px-6 py-3 bg-red-500 text-white rounded-lg hover:bg-red-600 transition duration-200">
                                    <i class="fas fa-trash-alt mr-2"></i> Clear Wishlist
                                </button>
                            <% } else { %>
                                <p class="text-gray-600 text-center">Your wishlist is empty. Add some items to get started!</p>
                            <% } %>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <%- include("../../views/partials/user/footer") %>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const removeButtons = document.querySelectorAll('.remove-item-btn');
            const addToCartButtons = document.querySelectorAll('.add-to-cart-btn');
            const clearWishlistBtn = document.querySelector('.clear-wishlist-btn');

            // Remove Item
            removeButtons.forEach(button => {
                button.addEventListener('click', async (event) => {
                    const productId= button.dataset.id;
                    try {
                        const response = await fetch(`/wishlist/remove/${productId}`, {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' }
                        });
                        const data = await response.json();
                        if (data.success) {
                            button.closest('.wishlist-item').remove();
                            if (document.querySelectorAll('.wishlist-item').length === 0) {
                                window.location.reload(); // Reload to show empty message
                            }
                        } else {
                            Swal.fire('Error', data.message || 'Failed to remove item', 'error');
                        }
                    } catch (error) {
                        console.error('Error removing item:', error);
                        Swal.fire('Error', 'An error occurred while removing the item.', 'error');
                    }
                });
            });

            // Add to Cart
            addToCartButtons.forEach(button => {
                button.addEventListener('click', async (event) => {
                    const productId = button.dataset.id;
                    try {
                        const response = await fetch(`/add-to-cart/${productId}`, {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ productId, quantity: 1 })
                        });
                        const data = await response.json();
                        if (data.success) {
                            Swal.fire('Success', 'Item added to cart!', 'success').then(() => {
                                button.closest('.wishlist-item').remove();
                                if (document.querySelectorAll('.wishlist-item').length === 0) {
                                    window.location.reload(); // Reload to show empty message
                                }
                            });
                        } else {
                            Swal.fire('Error', data.message || 'Failed to add to cart', 'error');
                        }
                    } catch (error) {
                        console.error('Error adding to cart:', error);
                        Swal.fire('Error', 'An error occurred while adding to cart.', 'error');
                    }
                });
            });

            // Clear Wishlist
            clearWishlistBtn?.addEventListener('click', async () => {
                try {
                    const response = await fetch('/wishlist/clear', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' }
                    });
                    const data = await response.json();
                    if (data.success) {
                        window.location.reload(); 
                    } else {
                        Swal.fire('Error', data.message || 'Failed to clear wishlist', 'error');
                    }
                } catch (error) {
                    console.error('Error clearing wishlist:', error);
                    Swal.fire('Error', 'An error occurred while clearing the wishlist.', 'error');
                }
            });
        });
    </script>
</body>
</html>