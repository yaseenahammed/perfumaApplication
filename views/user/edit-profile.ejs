<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Profile - Perfuma</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        tailwind.config = {
            theme: {
                extend: {
                    animation: {
                        'fade-in': 'fadeIn 0.5s ease-in-out',
                        'slide-up': 'slideUp 0.6s ease-out',
                    },
                    keyframes: {
                        fadeIn: {
                            '0%': { opacity: '0' },
                            '100%': { opacity: '1' },
                        },
                        slideUp: {
                            '0%': { transform: 'translateY(30px)', opacity: '0' },
                            '100%': { transform: 'translateY(0)', opacity: '1' },
                        }
                    }
                }
            }
        }
    </script>
    <style>
        /* Custom styles */
        .btn-custom {
            transition: all 0.3s ease;
        }
        .btn-custom:hover {
            transform: scale(1.05);
            background: linear-gradient(to-r, #c79f15, #a67b0a);
        }
        .profile-card {
            transition: all 0.3s ease;
        }
        .profile-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        }
        .modal-content {
            border-radius: 12px;
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);
        }
        .modal-header {
            background: linear-gradient(to-r, #d4a017, #b8860b);
            color: #fff;
            border-radius: 12px 12px 0 0;
        }
        .form-control:focus {
            border-color: #d4a017;
            box-shadow: 0 0 8px rgba(212, 160, 23, 0.3);
            outline: none;
        }
    </style>
</head>
<body class="bg-gray-50">
    <%- include("../partials/user/header") %>

    <!-- Page Header -->
    <section class="relative py-16 bg-gradient-to-r from-gray-900 via-gray-800 to-gray-900">
        <div class="relative z-10 container mx-auto px-4 text-center text-white">
            <h1 class="text-4xl lg:text-5xl font-bold mb-4 animate-fade-in">Edit Profile</h1>
            <nav class="flex items-center justify-center space-x-2 text-lg">
                <a href="/userProfile" class="text-gray-300 hover:text-white transition duration-200">Dashboard</a>
                <i class="fas fa-chevron-right text-gray-400 text-sm"></i>
                <span class="text-amber-400">Edit Profile</span>
            </nav>
        </div>
    </section>

    <!-- Main Edit Profile Section -->
    <main class="py-16">
        <div class="container mx-auto px-4">
            <div class="max-w-3xl mx-auto">
                <div class="profile-card bg-white rounded-2xl shadow-xl p-8 animate-fade-in">
                    <div class="flex items-center justify-between mb-8">
                        <h2 class="text-2xl lg:text-3xl font-bold text-gray-900 flex items-center">
                            <i class="fas fa-user-edit text-amber-500 mr-3"></i>
                            Edit Profile
                        </h2>
                    </div>
                    <form action="/edit-profile" method="POST" enctype="multipart/form-data">
                        <div class="space-y-6">
                            <div class="form-group">
                                <label for="name" class="block text-sm font-medium text-gray-900">Name</label>
                                <input type="text" id="name" name="name" value="<%= user.name %>" class="form-control mt-1 block w-full px-4 py-2 bg-gray-50 border border-gray-200 rounded-lg text-gray-900 focus:border-amber-500 transition duration-300">
                            </div>
                            <div class="form-group">
                                <label for="email" class="block text-sm font-medium text-gray-900">Email</label>
                                <input type="email" id="email" name="email" value="<%= user.email %>" class="form-control mt-1 block w-full px-4 py-2 bg-gray-100 border border-gray-200 rounded-lg text-gray-500 cursor-not-allowed" readonly>
                            </div>
                            <div class="form-group">
                                <label for="profileImage" class="block text-sm font-medium text-gray-900">Profile Image</label>
                                <input type="file" id="profileImage" name="profileImage" class="form-control mt-1 block w-full px-4 py-2 bg-gray-50 border border-gray-200 rounded-lg text-gray-900 focus:border-amber-500 transition duration-300">
                            </div>
                            <div class="save-button-group flex justify-center">
                                <button type="submit" class="btn-custom inline-flex items-center px-6 py-3 bg-gradient-to-r from-amber-500 to-orange-500 text-white font-semibold rounded-lg hover:from-amber-600 hover:to-orange-600 transition duration-300">
                                    <i class="fas fa-save mr-2"></i>
                                    Save Changes
                                </button>
                            </div>
                        </div>
                    </form>
                    <div class="button-group flex justify-center gap-4 mt-6">
                        <button class="btn-custom inline-flex items-center px-6 py-3 bg-gradient-to-r from-amber-500 to-orange-500 text-white font-semibold rounded-lg hover:from-amber-600 hover:to-orange-600 transition duration-300" data-bs-toggle="modal" data-bs-target="#currentEmailModal">
                            <i class="fas fa-envelope mr-2"></i>
                            Update Email
                        </button>
                        <button class="btn-custom inline-flex items-center px-6 py-3 bg-gradient-to-r from-amber-500 to-orange-500 text-white font-semibold rounded-lg hover:from-amber-600 hover:to-orange-600 transition duration-300" data-bs-toggle="modal" data-bs-target="#passwordModal">
                            <i class="fas fa-lock mr-2"></i>
                            Change Password
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <!-- Current Email Modal -->
    <div class="modal fade" id="currentEmailModal" tabindex="-1" aria-labelledby="currentEmailModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="currentEmailModalLabel">Verify Current Email</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="currentEmailForm">
                        <div class="mb-3">
                            <label for="currentEmail" class="form-label text-gray-900">Current Email</label>
                            <input type="email" class="form-control w-full px-4 py-2 bg-gray-50 border border-gray-200 rounded-lg text-gray-900 focus:border-amber-500 transition duration-300" id="currentEmail" name="currentEmail" required>
                        </div>
                        <button type="submit" class="btn-custom inline-flex items-center px-6 py-3 bg-gradient-to-r from-amber-500 to-orange-500 text-white font-semibold rounded-lg hover:from-amber-600 hover:to-orange-600 transition duration-300">
                            <i class="fas fa-paper-plane mr-2"></i>
                            Send OTP
                        </button>
                    </form>
                    <form id="currentOtpForm" style="display: none;">
                        <div class="mb-3">
                            <label for="currentOtp" class="form-label text-gray-900">Enter OTP</label>
                            <input type="text" class="form-control w-full px-4 py-2 bg-gray-50 border border-gray-200 rounded-lg text-gray-900 focus:border-amber-500 transition duration-300" id="currentOtp" name="currentOtp" required>
                        </div>
                        <button type="submit" class="btn-custom inline-flex items-center px-6 py-3 bg-gradient-to-r from-amber-500 to-orange-500 text-white font-semibold rounded-lg hover:from-amber-600 hover:to-orange-600 transition duration-300">
                            <i class="fas fa-check mr-2"></i>
                            Verify OTP
                        </button>
                    </form>
                    <div id="currentEmailMessage" class="mt-3 text-sm font-medium"></div>
                </div>
            </div>
        </div>
    </div>

    <!-- New Email Modal -->
    <div class="modal fade" id="newEmailModal" tabindex="-1" aria-labelledby="newEmailModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="newEmailModalLabel">Update Email</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="newEmailForm">
                        <div class="mb-3">
                            <label for="newEmail" class="form-label text-gray-900">New Email</label>
                            <input type="email" class="form-control w-full px-4 py-2 bg-gray-50 border border-gray-200 rounded-lg text-gray-900 focus:border-amber-500 transition duration-300" id="newEmail" name="newEmail" required>
                        </div>
                        <button type="submit" class="btn-custom inline-flex items-center px-6 py-3 bg-gradient-to-r from-amber-500 to-orange-500 text-white font-semibold rounded-lg hover:from-amber-600 hover:to-orange-600 transition duration-300">
                            <i class="fas fa-paper-plane mr-2"></i>
                            Send OTP
                        </button>
                    </form>
                    <form id="newOtpForm" style="display: none;">
                        <div class="mb-3">
                            <label for="newOtp" class="form-label text-gray-900">Enter OTP</label>
                            <input type="text" class="form-control w-full px-4 py-2 bg-gray-50 border border-gray-200 rounded-lg text-gray-900 focus:border-amber-500 transition duration-300" id="newOtp" name="newOtp" required>
                        </div>
                        <button type="submit" class="btn-custom inline-flex items-center px-6 py-3 bg-gradient-to-r from-amber-500 to-orange-500 text-white font-semibold rounded-lg hover:from-amber-600 hover:to-orange-600 transition duration-300">
                            <i class="fas fa-check mr-2"></i>
                            Verify OTP
                        </button>
                    </form>
                    <div id="newEmailMessage" class="mt-3 text-sm font-medium"></div>
                </div>
            </div>
        </div>
    </div>

    <!-- Password Change Modal -->
    <div class="modal fade" id="passwordModal" tabindex="-1" aria-labelledby="passwordModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="passwordModalLabel">Change Password</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="changePasswordForm" method="POST">
                        <div class="mb-3">
                            <label for="currentPassword" class="form-label text-gray-900">Current Password</label>
                            <input type="password" class="form-control w-full px-4 py-2 bg-gray-50 border border-gray-200 rounded-lg text-gray-900 focus:border-amber-500 transition duration-300" id="currentPassword" name="currentPassword" required>
                        </div>
                        <div class="mb-3">
                            <label for="newPassword" class="form-label text-gray-900">New Password</label>
                            <input type="password" class="form-control w-full px-4 py-2 bg-gray-50 border border-gray-200 rounded-lg text-gray-900 focus:border-amber-500 transition duration-300" id="newPassword" name="newPassword" required>
                        </div>
                        <div class="mb-3">
                            <label for="confirmPassword" class="form-label text-gray-900">Confirm New Password</label>
                            <input type="password" class="form-control w-full px-4 py-2 bg-gray-50 border border-gray-200 rounded-lg text-gray-900 focus:border-amber-500 transition duration-300" id="confirmPassword" name="confirmPassword" required>
                        </div>
                        <button type="submit" class="btn-custom inline-flex items-center px-6 py-3 bg-gradient-to-r from-amber-500 to-orange-500 text-white font-semibold rounded-lg hover:from-amber-600 hover:to-orange-600 transition duration-300">
                            <i class="fas fa-lock mr-2"></i>
                            Change Password
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <%- include("../partials/user/footer") %>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.min.js"></script>

    <script>
        // Edit Profile Validation
        document.querySelector('form[action="/edit-profile"]').addEventListener('submit', function (e) {
            const nameInput = document.getElementById('name');
            const profileImageInput = document.getElementById('profileImage');
            const name = nameInput.value.trim();
            const file = profileImageInput.files[0];
            const allowedTypes = ['image/jpeg', 'image/png', 'image/webp'];
            const nameRegex = /^[A-Za-z\s]{3,}$/;

            if (!nameRegex.test(name)) {
                e.preventDefault();
                Swal.fire({
                    icon: 'warning',
                    title: 'Invalid Name',
                    text: 'Name must contain only letters and spaces, and be at least 3 characters long.',
                });
                return;
            }

            if (file && !allowedTypes.includes(file.type)) {
                e.preventDefault();
                Swal.fire({
                    icon: 'error',
                    title: 'Invalid Image Format',
                    text: 'Only JPEG, PNG, or WEBP files are allowed.',
                });
                return;
            }
        });


      
    // jQuery Document Ready
    $(document).ready(function () {
        // Current Email Form
        $('#currentEmailForm').on('submit', function (e) {
            e.preventDefault();
            const currentEmail = $('#currentEmail').val().trim();
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

            if (!emailRegex.test(currentEmail)) {
                Swal.fire({
                    icon: 'error',
                    title: 'Invalid Email',
                    text: 'Please enter a valid email address.',
                });
                return;
            }

            $.ajax({
                url: '/send-email-otp',
                type: 'POST',
                data: { email: currentEmail, type: 'current' }, // Add type parameter
                success: function (response) {
                    Swal.fire({
                        icon: 'success',
                        title: 'OTP Sent',
                        text: response.message,
                    });
                    $('#currentEmailForm').hide();
                    $('#currentOtpForm').show();
                },
                error: function (xhr) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: xhr.responseJSON?.message || 'Something went wrong!',
                    });
                }
            });
        });

        // Current OTP Form
        $('#currentOtpForm').on('submit', function (e) {
            e.preventDefault();
            const otp = $('#currentOtp').val().trim();

            if (otp.length !== 6) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Invalid OTP',
                    text: 'OTP should be 6 digits.',
                });
                return;
            }

            $.ajax({
                url: '/verify-email-otp',
                type: 'POST',
                data: { otp, type: 'current' }, // Add type parameter
                success: function (response) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Verified',
                        text: response.message,
                        timer: 1500,
                        showConfirmButton: false
                    });
                    $('#currentEmailModal').modal('hide');
                    setTimeout(() => $('#newEmailModal').modal('show'), 1500);
                },
                error: function (xhr) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Verification Failed',
                        text: xhr.responseJSON?.message || 'Invalid OTP.'
                    });
                }
            });
        });

        // New Email Form
        $('#newEmailForm').on('submit', function (e) {
            e.preventDefault();
            const newEmail = $('#newEmail').val().trim();
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

            if (!emailRegex.test(newEmail)) {
                Swal.fire({
                    icon: 'error',
                    title: 'Invalid Email',
                    text: 'Please enter a valid email address.',
                });
                return;
            }

            $.ajax({
                url: '/send-email-otp',
                type: 'POST',
                data: { email: newEmail, type: 'new' }, // Add type parameter
                success: function (response) {
                    Swal.fire({
                        icon: 'success',
                        title: 'OTP Sent',
                        text: response.message,
                    });
                    $('#newEmailForm').hide();
                    $('#newOtpForm').show();
                },
                error: function (xhr) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: xhr.responseJSON?.message || 'Something went wrong!',
                    });
                }
            });
        });

        // New OTP Form
        $('#newOtpForm').on('submit', function (e) {
            e.preventDefault();
            const otp = $('#newOtp').val().trim();

            if (otp.length !== 6) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Invalid OTP',
                    text: 'OTP should be 6 digits.',
                });
                return;
            }

            $.ajax({
                url: '/verify-email-otp',
                type: 'POST',
                data: { otp, type: 'new' }, // Add type parameter
                success: function (response) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Email Updated',
                        text: response.message,
                        timer: 1500,
                        showConfirmButton: false
                    });
                    setTimeout(() => location.reload(), 1500);
                },
                error: function (xhr) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Verification Failed',
                        text: xhr.responseJSON?.message || 'Invalid OTP.'
                    });
                }
            });
        });
    });

   

        // Password Change Form
        document.getElementById('changePasswordForm').addEventListener('submit', async function (e) {
            e.preventDefault();

            const currentPassword = document.getElementById('currentPassword').value.trim();
            const newPassword = document.getElementById('newPassword').value.trim();
            const confirmPassword = document.getElementById('confirmPassword').value.trim();

            // Client-side validation
            if (!currentPassword || !newPassword || !confirmPassword) {
                return Swal.fire({
                    icon: 'warning',
                    title: 'All fields required',
                    text: 'Please fill in all fields.'
                });
            }

            const passwordRegex = /^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]{6,}$/;
            if (!passwordRegex.test(newPassword)) {
                return Swal.fire({
                    icon: 'warning',
                    title: 'Weak Password',
                    text: 'Password must contain letters and numbers and be at least 6 characters long.'
                });
            }

            if (newPassword !== confirmPassword) {
                return Swal.fire({
                    icon: 'error',
                    title: 'Password Mismatch',
                    text: 'New password and confirmation do not match.'
                });
            }

            try {
                const response = await fetch('/change-password', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ currentPassword, newPassword, confirmPassword })
                });

                const data = await response.json();

                if (response.ok) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: data.message
                    }).then(() => {
                        window.location.href = '/user-address';
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: data.message
                    });
                }
            } catch (error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops!',
                    text: 'Something went wrong.'
                });
            }
        });
    </script>
</body>
</html>